package com.dragonballzmod.entity.projectiles.entityModels;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;


public class shenronModel extends ModelBase

    {
        //fields
        ModelRenderer spine1;
        ModelRenderer head;
        ModelRenderer eyeBrow1;
        ModelRenderer eyeBrow2;
        ModelRenderer mouthTop;
        ModelRenderer mouthBottom;
        //ModelRenderer leftWisker;
        ModelRenderer hairLeft;
        //ModelRenderer headTopLeft;
        ModelRenderer headTopLeft;
        ModelRenderer hairRight;
        ModelRenderer leftWisker;
        ModelRenderer headHornLeft;
        ModelRenderer headHornRight;
        ModelRenderer headSpike;
        ModelRenderer Spike1;
        ModelRenderer spine2;
        ModelRenderer Spike2;
        ModelRenderer spine3;
        ModelRenderer Spike3;
        ModelRenderer spine4;
        ModelRenderer Spike4;
        ModelRenderer spine5;
        ModelRenderer Spike5;
        ModelRenderer leftArm1;
        ModelRenderer leftArm2;
        ModelRenderer rightArm1;
        ModelRenderer rightArm2;
        ModelRenderer spine6;
        ModelRenderer Spike6;
        ModelRenderer spine7;
        ModelRenderer Spike7;
        ModelRenderer spine8;
        ModelRenderer Spike8;
        ModelRenderer spine9;
        ModelRenderer Spike9;
        ModelRenderer spine10;
        ModelRenderer Spike10;
        ModelRenderer spine11;
        ModelRenderer Spike11;
        ModelRenderer spine12;
        ModelRenderer Spike12;
        ModelRenderer leftLeg1;
        ModelRenderer leftLeg2;
        ModelRenderer rightLeg1;
        ModelRenderer rightLeg2;
        ModelRenderer spine13;
        ModelRenderer Spike13;
        ModelRenderer spine14;
        ModelRenderer Spike14;
        ModelRenderer spine15;
        ModelRenderer Spike15;
        ModelRenderer spine16;
        ModelRenderer Spike16;
        ModelRenderer spine17;
        ModelRenderer Spike17;
        ModelRenderer Spike18;

        public shenronModel()
        {
            textureWidth = 64;
            textureHeight = 32;

            spine1 = new ModelRenderer(this, 0, 0);
            spine1.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine1.setRotationPoint(0F, 22F, -32.5F);
            spine1.setTextureSize(64, 32);
            spine1.mirror = true;
            setRotation(spine1, 0F, 0F, 0F);
            head = new ModelRenderer(this, 0, 0);
            head.addBox(-2F, -2F, 0F, 4, 4, 3);
            head.setRotationPoint(0F, 22F, -35.5F);
            head.setTextureSize(64, 32);
            head.mirror = true;
            setRotation(head, 0F, 0F, 0F);
            eyeBrow1 = new ModelRenderer(this, 0, 0);
            eyeBrow1.addBox(0F, -0.5F, -0.5F, 2, 1, 1);
            eyeBrow1.setRotationPoint(0.3F, 21F, -35.5F);
            eyeBrow1.setTextureSize(64, 32);
            eyeBrow1.mirror = true;
            setRotation(eyeBrow1, 0F, 0F, -0.3141593F);
            eyeBrow2 = new ModelRenderer(this, 0, 0);
            eyeBrow2.addBox(-2F, -0.5F, -0.5F, 2, 1, 1);
            eyeBrow2.setRotationPoint(-0.3F, 21F, -35.5F);
            eyeBrow2.setTextureSize(64, 32);
            eyeBrow2.mirror = true;
            setRotation(eyeBrow2, 0F, 0F, 0.3141593F);
            mouthTop = new ModelRenderer(this, 0, 0);
            mouthTop.addBox(-1F, -1F, -4F, 2, 1, 3);
            mouthTop.setRotationPoint(0F, 23F, -34.5F);
            mouthTop.setTextureSize(64, 32);
            mouthTop.mirror = true;
            setRotation(mouthTop, 0F, 0F, 0F);
            mouthBottom = new ModelRenderer(this, 0, 0);
            mouthBottom.addBox(-1F, 0F, -3F, 2, 1, 3);
            mouthBottom.setRotationPoint(0F, 23F, -35.2F);
            mouthBottom.setTextureSize(64, 32);
            mouthBottom.mirror = true;
            setRotation(mouthBottom, 0F, 0F, 0F);
            leftWisker = new ModelRenderer(this, 0, 0);
            leftWisker.addBox(0F, -1.5F, 0F, 10, 3, 0);
            leftWisker.setRotationPoint(1F, 22.5F, -38F);
            leftWisker.setTextureSize(64, 32);
            leftWisker.mirror = true;
            setRotation(leftWisker, 0F, -0.2094395F, -0.122173F);
            hairLeft = new ModelRenderer(this, 0, 0);
            hairLeft.addBox(0F, -2F, 0F, 2, 4, 0);
            hairLeft.setRotationPoint(2F, 22F, -32.5F);
            hairLeft.setTextureSize(64, 32);
            hairLeft.mirror = true;
            setRotation(hairLeft, 0F, -0.6108652F, 0F);
            headTopLeft = new ModelRenderer(this, 0, 0);
            headTopLeft.addBox(-1F, -2F, 0F, 2, 2, 2);
            headTopLeft.setRotationPoint(1F, 20F, -35F);
            headTopLeft.setTextureSize(64, 32);
            headTopLeft.mirror = true;
            setRotation(headTopLeft, -0.7853982F, 0F, 0.2792527F);
            headTopLeft = new ModelRenderer(this, 0, 0);
            headTopLeft.addBox(-1F, -2F, 0F, 2, 2, 2);
            headTopLeft.setRotationPoint(-1F, 20F, -35F);
            headTopLeft.setTextureSize(64, 32);
            headTopLeft.mirror = true;
            setRotation(headTopLeft, -0.7853982F, 0F, -0.2792527F);
            hairRight = new ModelRenderer(this, 0, 0);
            hairRight.addBox(-2F, -2F, 0F, 2, 4, 0);
            hairRight.setRotationPoint(-2F, 22F, -32.5F);
            hairRight.setTextureSize(64, 32);
            hairRight.mirror = true;
            setRotation(hairRight, 0F, 0.6108652F, 0F);
            leftWisker = new ModelRenderer(this, 0, 0);
            leftWisker.addBox(-10F, -1.5F, 0F, 10, 3, 0);
            leftWisker.setRotationPoint(-1F, 22.5F, -38F);
            leftWisker.setTextureSize(64, 32);
            leftWisker.mirror = true;
            setRotation(leftWisker, 0F, 0.2094395F, 0.122173F);
            headHornLeft = new ModelRenderer(this, 0, 0);
            headHornLeft.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
            headHornLeft.setRotationPoint(1F, 19.5F, -33F);
            headHornLeft.setTextureSize(64, 32);
            headHornLeft.mirror = true;
            setRotation(headHornLeft, 0.7853982F, 0F, 0.2792527F);
            headHornRight = new ModelRenderer(this, 0, 0);
            headHornRight.addBox(-0.5F, -0.5F, 0F, 1, 1, 5);
            headHornRight.setRotationPoint(-1F, 19.5F, -33F);
            headHornRight.setTextureSize(64, 32);
            headHornRight.mirror = true;
            setRotation(headHornRight, 0.7853982F, 0F, -0.2792527F);
            headSpike = new ModelRenderer(this, 0, 0);
            headSpike.addBox(0F, -1F, -1.5F, 0, 1, 3);
            headSpike.setRotationPoint(0F, 20F, -34F);
            headSpike.setTextureSize(64, 32);
            headSpike.mirror = true;
            setRotation(headSpike, 0F, 0F, 0F);
            Spike1 = new ModelRenderer(this, 0, 0);
            Spike1.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike1.setRotationPoint(0F, 20.5F, -30F);
            Spike1.setTextureSize(64, 32);
            Spike1.mirror = true;
            setRotation(Spike1, 0F, 0F, 0F);
            spine2 = new ModelRenderer(this, 0, 0);
            spine2.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine2.setRotationPoint(0F, 22F, -27.5F);
            spine2.setTextureSize(64, 32);
            spine2.mirror = true;
            setRotation(spine2, 0F, 0F, 0F);
            Spike2 = new ModelRenderer(this, 0, 0);
            Spike2.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike2.setRotationPoint(0F, 20.5F, -25F);
            Spike2.setTextureSize(64, 32);
            Spike2.mirror = true;
            setRotation(Spike2, 0F, 0F, 0F);
            spine3 = new ModelRenderer(this, 0, 0);
            spine3.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine3.setRotationPoint(0F, 22F, -22.5F);
            spine3.setTextureSize(64, 32);
            spine3.mirror = true;
            setRotation(spine3, 0F, 0F, 0F);
            Spike3 = new ModelRenderer(this, 0, 0);
            Spike3.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike3.setRotationPoint(0F, 20.5F, -20F);
            Spike3.setTextureSize(64, 32);
            Spike3.mirror = true;
            setRotation(Spike3, 0F, 0F, 0F);
            spine4 = new ModelRenderer(this, 0, 0);
            spine4.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine4.setRotationPoint(0F, 22F, -17.5F);
            spine4.setTextureSize(64, 32);
            spine4.mirror = true;
            setRotation(spine4, 0F, 0F, 0F);
            Spike4 = new ModelRenderer(this, 0, 0);
            Spike4.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike4.setRotationPoint(0F, 20.5F, -15F);
            Spike4.setTextureSize(64, 32);
            Spike4.mirror = true;
            setRotation(Spike4, 0F, 0F, 0F);
            spine5 = new ModelRenderer(this, 0, 0);
            spine5.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine5.setRotationPoint(0F, 22F, -12.5F);
            spine5.setTextureSize(64, 32);
            spine5.mirror = true;
            setRotation(spine5, 0F, 0F, 0F);
            Spike5 = new ModelRenderer(this, 0, 0);
            Spike5.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike5.setRotationPoint(0F, 20.5F, -10F);
            Spike5.setTextureSize(64, 32);
            Spike5.mirror = true;
            setRotation(Spike5, 0F, 0F, 0F);
            leftArm1 = new ModelRenderer(this, 0, 0);
            leftArm1.addBox(0F, -1F, -1F, 4, 2, 2);
            leftArm1.setRotationPoint(1F, 22F, -16F);
            leftArm1.setTextureSize(64, 32);
            leftArm1.mirror = true;
            setRotation(leftArm1, 0F, 0F, 0F);
            leftArm2 = new ModelRenderer(this, 0, 0);
            leftArm2.addBox(0F, -1F, -1F, 4, 2, 2);
            leftArm2.setRotationPoint(5F, 22F, -16F);
            leftArm2.setTextureSize(64, 32);
            leftArm2.mirror = true;
            setRotation(leftArm2, 0F, 0F, 0F);
            rightArm1 = new ModelRenderer(this, 0, 0);
            rightArm1.addBox(-4F, -1F, -1F, 4, 2, 2);
            rightArm1.setRotationPoint(-1.5F, 22F, -16F);
            rightArm1.setTextureSize(64, 32);
            rightArm1.mirror = true;
            setRotation(rightArm1, 0F, 0F, 0F);
            rightArm2 = new ModelRenderer(this, 0, 0);
            rightArm2.addBox(-4F, -1F, -1F, 4, 2, 2);
            rightArm2.setRotationPoint(-5.5F, 22F, -16F);
            rightArm2.setTextureSize(64, 32);
            rightArm2.mirror = true;
            setRotation(rightArm2, 0F, 0F, 0F);
            spine6 = new ModelRenderer(this, 0, 0);
            spine6.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine6.setRotationPoint(0F, 22F, -7.5F);
            spine6.setTextureSize(64, 32);
            spine6.mirror = true;
            setRotation(spine6, 0F, 0F, 0F);
            Spike6 = new ModelRenderer(this, 0, 0);
            Spike6.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike6.setRotationPoint(0F, 20.5F, -5F);
            Spike6.setTextureSize(64, 32);
            Spike6.mirror = true;
            setRotation(Spike6, 0F, 0F, 0F);
            spine7 = new ModelRenderer(this, 0, 0);
            spine7.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine7.setRotationPoint(0F, 22F, -2.5F);
            spine7.setTextureSize(64, 32);
            spine7.mirror = true;
            setRotation(spine7, 0F, 0F, 0F);
            Spike7 = new ModelRenderer(this, 0, 0);
            Spike7.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike7.setRotationPoint(0F, 20.5F, 0F);
            Spike7.setTextureSize(64, 32);
            Spike7.mirror = true;
            setRotation(Spike7, 0F, 0F, 0F);
            spine8 = new ModelRenderer(this, 0, 0);
            spine8.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine8.setRotationPoint(0F, 22F, 2.5F);
            spine8.setTextureSize(64, 32);
            spine8.mirror = true;
            setRotation(spine8, 0F, 0F, 0F);
            Spike8 = new ModelRenderer(this, 0, 0);
            Spike8.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike8.setRotationPoint(0F, 20.5F, 5F);
            Spike8.setTextureSize(64, 32);
            Spike8.mirror = true;
            setRotation(Spike8, 0F, 0F, 0F);
            spine9 = new ModelRenderer(this, 0, 0);
            spine9.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine9.setRotationPoint(0F, 22F, 7.5F);
            spine9.setTextureSize(64, 32);
            spine9.mirror = true;
            setRotation(spine9, 0F, 0F, 0F);
            Spike9 = new ModelRenderer(this, 0, 0);
            Spike9.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike9.setRotationPoint(0F, 20.5F, 10F);
            Spike9.setTextureSize(64, 32);
            Spike9.mirror = true;
            setRotation(Spike9, 0F, 0F, 0F);
            spine10 = new ModelRenderer(this, 0, 0);
            spine10.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine10.setRotationPoint(0F, 22F, 12.5F);
            spine10.setTextureSize(64, 32);
            spine10.mirror = true;
            setRotation(spine10, 0F, 0F, 0F);
            Spike10 = new ModelRenderer(this, 0, 0);
            Spike10.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike10.setRotationPoint(0F, 20.5F, 15F);
            Spike10.setTextureSize(64, 32);
            Spike10.mirror = true;
            setRotation(Spike10, 0F, 0F, 0F);
            spine11 = new ModelRenderer(this, 0, 0);
            spine11.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine11.setRotationPoint(0F, 22F, 17.5F);
            spine11.setTextureSize(64, 32);
            spine11.mirror = true;
            setRotation(spine11, 0F, 0F, 0F);
            Spike11 = new ModelRenderer(this, 0, 0);
            Spike11.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike11.setRotationPoint(0F, 20.5F, 20F);
            Spike11.setTextureSize(64, 32);
            Spike11.mirror = true;
            setRotation(Spike11, 0F, 0F, 0F);
            spine12 = new ModelRenderer(this, 0, 0);
            spine12.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine12.setRotationPoint(0F, 22F, 22.5F);
            spine12.setTextureSize(64, 32);
            spine12.mirror = true;
            setRotation(spine12, 0F, 0F, 0F);
            Spike12 = new ModelRenderer(this, 0, 0);
            Spike12.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike12.setRotationPoint(0F, 20.5F, 25F);
            Spike12.setTextureSize(64, 32);
            Spike12.mirror = true;
            setRotation(Spike12, 0F, 0F, 0F);
            leftLeg1 = new ModelRenderer(this, 0, 0);
            leftLeg1.addBox(0F, -1F, -1F, 4, 2, 2);
            leftLeg1.setRotationPoint(1F, 22F, 11F);
            leftLeg1.setTextureSize(64, 32);
            leftLeg1.mirror = true;
            setRotation(leftLeg1, 0F, 0F, 0F);
            leftLeg2 = new ModelRenderer(this, 0, 0);
            leftLeg2.addBox(0F, -1F, -1F, 4, 2, 2);
            leftLeg2.setRotationPoint(5F, 22F, 11F);
            leftLeg2.setTextureSize(64, 32);
            leftLeg2.mirror = true;
            setRotation(leftLeg2, 0F, 0F, 0F);
            rightLeg1 = new ModelRenderer(this, 0, 0);
            rightLeg1.addBox(-4F, -1F, -1F, 4, 2, 2);
            rightLeg1.setRotationPoint(-1.5F, 22F, 11F);
            rightLeg1.setTextureSize(64, 32);
            rightLeg1.mirror = true;
            setRotation(rightLeg1, 0F, 0F, 0F);
            rightLeg2 = new ModelRenderer(this, 0, 0);
            rightLeg2.addBox(-4F, -1F, -1F, 4, 2, 2);
            rightLeg2.setRotationPoint(-5.5F, 22F, 11F);
            rightLeg2.setTextureSize(64, 32);
            rightLeg2.mirror = true;
            setRotation(rightLeg2, 0F, 0F, 0F);
            spine13 = new ModelRenderer(this, 0, 0);
            spine13.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine13.setRotationPoint(0F, 22F, 27.5F);
            spine13.setTextureSize(64, 32);
            spine13.mirror = true;
            setRotation(spine13, 0F, 0F, 0F);
            Spike13 = new ModelRenderer(this, 0, 0);
            Spike13.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike13.setRotationPoint(0F, 20.5F, 30F);
            Spike13.setTextureSize(64, 32);
            Spike13.mirror = true;
            setRotation(Spike13, 0F, 0F, 0F);
            spine14 = new ModelRenderer(this, 0, 0);
            spine14.addBox(-1.5F, -1.5F, 0F, 3, 3, 5);
            spine14.setRotationPoint(0F, 22F, 32.5F);
            spine14.setTextureSize(64, 32);
            spine14.mirror = true;
            setRotation(spine14, 0F, 0F, 0F);
            Spike14 = new ModelRenderer(this, 0, 0);
            Spike14.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike14.setRotationPoint(0F, 20.5F, 35F);
            Spike14.setTextureSize(64, 32);
            Spike14.mirror = true;
            setRotation(Spike14, 0F, 0F, 0F);
            spine15 = new ModelRenderer(this, 0, 0);
            spine15.addBox(-1F, -1F, 0F, 2, 2, 5);
            spine15.setRotationPoint(0F, 22F, 37.5F);
            spine15.setTextureSize(64, 32);
            spine15.mirror = true;
            setRotation(spine15, 0F, 0F, 0F);
            Spike15 = new ModelRenderer(this, 0, 0);
            Spike15.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike15.setRotationPoint(0F, 21F, 40F);
            Spike15.setTextureSize(64, 32);
            Spike15.mirror = true;
            setRotation(Spike15, 0F, 0F, 0F);
            spine16 = new ModelRenderer(this, 0, 0);
            spine16.addBox(-1F, -1F, 0F, 2, 2, 5);
            spine16.setRotationPoint(0F, 22F, 42.5F);
            spine16.setTextureSize(64, 32);
            spine16.mirror = true;
            setRotation(spine16, 0F, 0F, 0F);
            Spike16 = new ModelRenderer(this, 0, 0);
            Spike16.addBox(0F, -1F, -2.5F, 0, 1, 5);
            Spike16.setRotationPoint(0F, 21F, 45F);
            Spike16.setTextureSize(64, 32);
            Spike16.mirror = true;
            setRotation(Spike16, 0F, 0F, 0F);
            spine17 = new ModelRenderer(this, 0, 0);
            spine17.addBox(-0.5F, -0.5F, 0F, 1, 1, 11);
            spine17.setRotationPoint(0F, 22F, 47F);
            spine17.setTextureSize(64, 32);
            spine17.mirror = true;
            setRotation(spine17, 0F, 0F, 0F);
            Spike17 = new ModelRenderer(this, 0, 0);
            Spike17.addBox(0F, -1F, -5.5F, 0, 1, 11);
            Spike17.setRotationPoint(0F, 21.5F, 53F);
            Spike17.setTextureSize(64, 32);
            Spike17.mirror = true;
            setRotation(Spike17, 0F, 0F, 0F);
            Spike18 = new ModelRenderer(this, 0, 0);
            Spike18.addBox(0F, 0F, 0F, 0, 2, 1);
            Spike18.setRotationPoint(0F, 20.5F, 58F);
            Spike18.setTextureSize(64, 32);
            Spike18.mirror = true;
            setRotation(Spike18, 0F, 0F, 0F);
        }

        public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
        {
            super.render(entity, f, f1, f2, f3, f4, f5);
          //  setRotationAngles(f, f1, f2, f3, f4, f5);
            spine1.render(f5);
            head.render(f5);
            eyeBrow1.render(f5);
            eyeBrow2.render(f5);
            mouthTop.render(f5);
            mouthBottom.render(f5);
            leftWisker.render(f5);
            hairLeft.render(f5);
            headTopLeft.render(f5);
            headTopLeft.render(f5);
            hairRight.render(f5);
            leftWisker.render(f5);
            headHornLeft.render(f5);
            headHornRight.render(f5);
            headSpike.render(f5);
            Spike1.render(f5);
            spine2.render(f5);
            Spike2.render(f5);
            spine3.render(f5);
            Spike3.render(f5);
            spine4.render(f5);
            Spike4.render(f5);
            spine5.render(f5);
            Spike5.render(f5);
            leftArm1.render(f5);
            leftArm2.render(f5);
            rightArm1.render(f5);
            rightArm2.render(f5);
            spine6.render(f5);
            Spike6.render(f5);
            spine7.render(f5);
            Spike7.render(f5);
            spine8.render(f5);
            Spike8.render(f5);
            spine9.render(f5);
            Spike9.render(f5);
            spine10.render(f5);
            Spike10.render(f5);
            spine11.render(f5);
            Spike11.render(f5);
            spine12.render(f5);
            Spike12.render(f5);
            leftLeg1.render(f5);
            leftLeg2.render(f5);
            rightLeg1.render(f5);
            rightLeg2.render(f5);
            spine13.render(f5);
            Spike13.render(f5);
            spine14.render(f5);
            Spike14.render(f5);
            spine15.render(f5);
            Spike15.render(f5);
            spine16.render(f5);
            Spike16.render(f5);
            spine17.render(f5);
            Spike17.render(f5);
            Spike18.render(f5);
        }

        private void setRotation(ModelRenderer model, float x, float y, float z)
        {
            model.rotateAngleX = x;
            model.rotateAngleY = y;
            model.rotateAngleZ = z;
        }

        public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
        {
            super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        }

    }


